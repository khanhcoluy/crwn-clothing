{"ast":null,"code":"import { takeLatest, put, all, call } from '@redux-saga/core/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  c;\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["D:/Training React/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","c","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,0BAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,eAAjG;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACRI,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAAT;AAGA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACf,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACA;AACD;AAGD,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjEC,EAAAA,CAAC;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACA;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,CAAhB;AACD;AAED,OAAO,UAAUC,QAAV,GAAqB;AAC3B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from '@redux-saga/core/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\r\n\r\nimport {\r\n\tauth,\r\n\tgoogleProvider,\r\n\tcreateUserProfileDocument\r\n} from '../../firebase/firebase.utils';\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n\t\tconst userRef = yield call(createUserProfileDocument, user);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put(\r\n\t\t\tgoogleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tyield put(googleSignInFailure(error));\r\n\t}\r\n}\r\n\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  c\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, )\r\n}\r\n\r\nexport function* userSaga() {\r\n\tyield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}