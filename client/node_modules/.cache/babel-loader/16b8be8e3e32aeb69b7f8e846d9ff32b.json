{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training React\\\\crwn-clothing\\\\src\\\\component\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          handleChange: this.handleChange,\n          value: this.state.email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \" Sign in \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/Training React/crwn-clothing/src/component/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","props","email","password","state","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,SACCC,iBADD,EAECC,gBAFD,QAGO,+BAHP;AAKA,SACCC,eADD,EAECC,WAFD,EAGCC,mBAHD,QAIO,kBAJP;;;AAMA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAGpCC,YAHoC,GAGpBC,KAAD,IAAW;AACzB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBF,KAAK,CAACG,MAA9B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQD;AAAV,OAAd;AACA,KANmC;;AAAA,SAQpCI,YARoC,GAQrB,MAAOL,KAAP,IAAiB;AAC/BA,MAAAA,KAAK,CAACM,cAAN;AACE,YAAM;AAAEb,QAAAA;AAAF,UAAuB,KAAKc,KAAlC;AACF,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;AAEEjB,MAAAA,gBAAgB,CAACe,KAAD,EAAQC,QAAR,CAAhB;AACF,KAdmC;AAAA;;AAgBpCE,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEnB,MAAAA;AAAF,QAAwB,KAAKe,KAAnC;AACA,wBACC,QAAC,eAAD;AAAA,8BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAIC;AAAM,QAAA,QAAQ,EAAE,KAAKF,YAArB;AAAA,gCACC,QAAC,SAAD;AACC,UAAA,IAAI,EAAC,OADN;AAEC,UAAA,IAAI,EAAC,OAFN;AAGC,UAAA,YAAY,EAAE,KAAKN,YAHpB;AAIC,UAAA,KAAK,EAAE,KAAKW,KAAL,CAAWF,KAJnB;AAKC,UAAA,KAAK,EAAC,OALP;AAMC,UAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,gBADD,eASC,QAAC,SAAD;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,IAAI,EAAC,UAFN;AAGC,UAAA,KAAK,EAAE,KAAKE,KAAL,CAAWD,QAHnB;AAIC,UAAA,YAAY,EAAE,KAAKV,YAJpB;AAKC,UAAA,KAAK,EAAC,UALP;AAMC,UAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,gBATD,eAiBC,QAAC,mBAAD;AAAA,kCACC,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,YAAD;AACC,YAAA,IAAI,EAAC,QADN;AAEC,YAAA,OAAO,EAAEP,iBAFV;AAGC,YAAA,cAAc,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAmCA;;AArDmC;;AAwDrC,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACzCrB,EAAAA,iBAAiB,EAAE,MAAMqB,QAAQ,CAACrB,iBAAiB,EAAlB,CADQ;AAEzCC,EAAAA,gBAAgB,EAAE,CAACe,KAAD,EAAQC,QAAR,KACjBI,QAAQ,CAACpB,gBAAgB,CAAC;AAAEe,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAHgC,CAAf,CAA3B;;AAMA,eAAepB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport {\r\n\tgoogleSignInStart,\r\n\temailSignInStart\r\n} from '../../redux/user/user.actions';\r\n\r\nimport {\r\n\tSignInContainer,\r\n\tSignInTitle,\r\n\tButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nclass SignIn extends React.Component {\r\n  \r\n\r\n\thandleChange = (event) => {\r\n\t\tconst { value, name } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\thandleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n    const { emailSignInStart } = this.props;\r\n\t\tconst { email, password } = this.state;\r\n\r\n    emailSignInStart(email, password);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { googleSignInStart } = this.props;\r\n\t\treturn (\r\n\t\t\t<SignInContainer>\r\n\t\t\t\t<SignInTitle>I already have an account</SignInTitle>\r\n\t\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\tlabel=\"email\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tlabel=\"password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ButtonsBarContainer>\r\n\t\t\t\t\t\t<CustomButton type=\"submit\"> Sign in </CustomButton>\r\n\t\t\t\t\t\t<CustomButton\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tonClick={googleSignInStart}\r\n\t\t\t\t\t\t\tisGoogleSignIn\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t\t</CustomButton>\r\n\t\t\t\t\t</ButtonsBarContainer>\r\n\t\t\t\t</form>\r\n\t\t\t</SignInContainer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\r\n\temailSignInStart: (email, password) =>\r\n\t\tdispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}