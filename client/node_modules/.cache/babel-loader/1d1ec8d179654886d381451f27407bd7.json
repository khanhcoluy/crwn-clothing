{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/Training React/crwn-clothing/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACU,uBADgC;AAEtDD,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAMK,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAEFW,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACtC,YAAMX,cAAc,GAAGL,+BAA+B,CAACgB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,KAHD,EAGGY,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACH,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIC,GARD;AASD,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: ShopActionTypes.fetchCollectionsFailure,\r\n  payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n\r\n\t\tcollectionRef.get().then((snapshot) => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t\t}).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}